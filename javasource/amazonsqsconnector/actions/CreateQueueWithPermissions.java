// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package amazonsqsconnector.actions;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import com.amazonaws.auth.policy.Policy;
import com.amazonaws.auth.policy.Principal;
import com.amazonaws.auth.policy.Resource;
import com.amazonaws.auth.policy.Statement;
import com.amazonaws.auth.policy.Statement.Effect;
import com.amazonaws.auth.policy.actions.SQSActions;
import com.amazonaws.services.sqs.AmazonSQS;
import com.amazonaws.services.sqs.model.CreateQueueRequest;
import com.amazonaws.services.sqs.model.GetQueueAttributesResult;
import com.amazonaws.services.sqs.model.QueueAttributeName;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import amazonsqsconnector.factories.AmazonSQSFactory;

public class CreateQueueWithPermissions extends CustomJavaAction<java.lang.String>
{
	private java.lang.String queueName;

	public CreateQueueWithPermissions(IContext context, java.lang.String queueName)
	{
		super(context);
		this.queueName = queueName;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		AmazonSQS sqs = AmazonSQSFactory.getSQS();
		
		CreateQueueRequest createQueueRequest = new CreateQueueRequest(queueName);
        String myQueueUrl = sqs.createQueue(createQueueRequest).getQueueUrl();
        
        GetQueueAttributesResult getQueueAttributesResult = sqs.getQueueAttributes(myQueueUrl, Arrays.asList("QueueArn"));
        String queueArn = getQueueAttributesResult.getAttributes().get("QueueArn");
        
        Policy policy = new Policy().withStatements(
			    new Statement(Effect.Allow)
			    	.withPrincipals(Principal.All)
			    	.withResources(new Resource(queueArn))
			        .withActions(SQSActions.ReceiveMessage, SQSActions.DeleteMessage));
			    
	    Map<String, String> queueAttributes = new HashMap<>();
	    queueAttributes.put(QueueAttributeName.Policy.toString(), policy.toJson());
	    
	    sqs.setQueueAttributes(myQueueUrl, queueAttributes);
		
        return myQueueUrl;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "CreateQueueWithPermissions";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
